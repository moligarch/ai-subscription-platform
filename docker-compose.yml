networks:
  lan_net:
    external: true    # we created it with `docker network create`

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: appdb
      TZ: Asia/Tehran
      PGTZ: Asia/Tehran
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./deploy/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: ["postgres","-c","listen_addresses=*"]
    restart: unless-stopped
    networks:
      lan_net:
        ipv4_address: 192.168.10.211
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb -h 127.0.0.1 -p 5432"]
      interval: 20s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server","--appendonly","no","--bind","0.0.0.0"]
    restart: unless-stopped
    networks:
      lan_net:
        ipv4_address: 192.168.10.212

  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
      - --web.enable-lifecycle
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped
    networks:
      lan_net:
        ipv4_address: 192.168.10.213

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: telegram-ai:latest
    container_name: telegram-ai
    volumes:
      - ./config.yaml:/etc/app/config.yaml:ro         # easy edits
    environment:
      TZ: Asia/Tehran
      HTTPS_PROXY: http://192.168.10.1:10809
      HTTP_PROXY:  http://192.168.10.1:10809
      NO_PROXY:    127.0.0.1,localhost,192.168.10.0/24
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2g
    networks:
      lan_net:
        ipv4_address: 192.168.10.210

volumes:
  pgdata:
