bot:
  token: "BOT_TOKEN"
  mode: "polling"         # webhook | polling
  port: 9000              # only used if you later implement webhook
  url: "http://<your-domain>:9000"
  admin_ids:
    - 12345689

log:
  level: info      # trace | debug | info | warn | error
  format: json     # json | console
  sampling: true   # enable sampling in prod

admin:
  port: 8080              # fallback port for HTTP server (incl. payment callback)
  api_key: ""

database:
  url: "postgres://app:app@<posgres_container_ip>:5432/appdb?sslmode=disable"
  max_conn: 30

redis:
  url: "<redis_container_ip>:6379"
  password: ""
  db: 1
  ttl: "1h"

ai:
  model_provider_map:
    gpt-4o-mini: openai
    gpt-4o: openai
    gemini-1.5-flash: gemini
    gemini-1.5-pro: gemini

  openai:
    api_key: "..."
    base_url: ""            # leave empty for api.openai.com; set to OpenRouter/Metis base to route there
    default_model: gpt-4o-mini

  gemini:
    api_key: "..."
    base_url: ""            # usually empty; override only if you proxy Gemini
    default_model: gemini-1.5-flash
    
  concurrent_limit: 24
  max_output_tokens: 512

payment:
  zarinpal:
    merchant_id: "YOUR-MERCHANT-ID"
    callback_url: "https://your-domain.tld/payment/callback/zp"   # used to extract callback path
    callback_port: 8080          # optional; if absent we use admin.port
    sandbox: true
    access_token: ""        # OAuth access token (required for Refund API)
    graphql_endpoint: ""    # optional; defaults to https://api.zarinpal.com/api/v4/graphql

scheduler:
  expiry_check_cron: "@daily"     # FYI (worker uses hourly ticker in Phase 1)

security:
  encryption_key: "0123456789abcdef0123456789abcdef" # 32 bytes (AES-256); replace in prod